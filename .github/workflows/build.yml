name: Build Electron App

on:
  push:
    branches: [ main, master, feature/* ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master, feature/* ]

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          echo "Installed dependencies:"
          npm list fs-extra

      # Windows build
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: npm run build
        env:
          USE_HARD_LINKS: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # macOS build
      - name: Build macOS
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
        env:
          USE_HARD_LINKS: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Linux build
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux
        env:
          USE_HARD_LINKS: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload build artifacts
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            dist/*.exe
            dist/*.zip

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: dist/*.dmg

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: dist/*.AppImage

  # Create release (only when tag is pushed)
  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows-artifacts/*
            artifacts/macos-artifacts/*
            artifacts/linux-artifacts/*
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}